import type { ComponentDefinition, ComponentType } from "./types"

// Component Registry
export const componentRegistry: Record<ComponentType, ComponentDefinition> = {
  // Content Components
  TextComponent: {
    type: "TextComponent",
    name: "Text",
    description: "Add text content or headings",
    cost: 1,
    category: "basic",
    subcategory: "Content",
    componentClass: "content",
    defaultData: {
      content: "Add your text here",
      isHeading: false,
      headingLevel: 2,
      textAlign: "left",
      color: "",
    },
  },
  ButtonComponent: {
    type: "ButtonComponent",
    name: "Button",
    description: "Add an interactive button with customizable styles",
    cost: 2,
    category: "basic",
    subcategory: "Interactive",
    componentClass: "content",
    defaultData: {
      text: "Click me",
      variant: "default",
      size: "default",
      fullWidth: false,
      icon: "",
      iconPosition: "left",
      url: "",
      color: "",
      backgroundColor: "",
    },
  },
  ImageComponent: {
    type: "ImageComponent",
    name: "Image",
    description: "Add an image to your card",
    cost: 5,
    category: "aesthetic",
    subcategory: "Media",
    componentClass: "content",
    defaultData: {
      url: "/placeholder-image.png",
      alt: "Image description",
      width: "100%",
      height: "auto",
      borderRadius: "0.5rem",
      shadow: false,
    },
  },
  DividerComponent: {
    type: "DividerComponent",
    name: "Divider",
    description: "Add a horizontal line to separate content",
    cost: 1,
    category: "basic",
    subcategory: "Layout",
    componentClass: "content",
    defaultData: {
      style: "solid",
      width: "100%",
      thickness: 1,
      color: "",
      margin: "1rem 0",
    },
  },
  SpacerComponent: {
    type: "SpacerComponent",
    name: "Spacer",
    description: "Add vertical or horizontal space between elements",
    cost: 1,
    category: "basic",
    subcategory: "Layout",
    componentClass: "content",
    defaultData: {
      height: "1rem",
      width: "100%",
    },
  },
  IconComponent: {
    type: "IconComponent",
    name: "Icon",
    description: "Add a vector icon from a library of options",
    cost: 1,
    category: "basic",
    subcategory: "Content",
    componentClass: "content",
    defaultData: {
      name: "star",
      size: "24px",
      color: "",
      strokeWidth: 2,
    },
  },
  LinkComponent: {
    type: "LinkComponent",
    name: "Link",
    description: "Add a hyperlink to external content",
    cost: 1,
    category: "basic",
    subcategory: "Interactive",
    componentClass: "content",
    defaultData: {
      text: "Visit website",
      url: "https://example.com",
      openInNewTab: true,
      underline: true,
      color: "",
    },
  },
  BadgeComponent: {
    type: "BadgeComponent",
    name: "Badge",
    description: "Add a small status indicator or label",
    cost: 1,
    category: "basic",
    subcategory: "Content",
    componentClass: "content",
    defaultData: {
      text: "New",
      variant: "default",
      size: "default",
      color: "",
      backgroundColor: "",
    },
  },
  MapEmbedComponent: {
    type: "MapEmbedComponent",
    name: "Map",
    description: "Interactive map with location marker",
    cost: 6,
    category: "interaction",
    subcategory: "Location",
    componentClass: "content",
    defaultData: {
      latitude: 40.7128,
      longitude: -74.006,
      zoom: 13,
      markerTitle: "Location",
      markerDescription: "This is our location",
      mapType: "roadmap",
      height: "300px",
      width: "100%",
      showControls: true,
      showMarker: true,
      apiKey: "",
    },
    new: true,
  },
  QRComponent: {
    type: "QRComponent",
    name: "QR Code",
    description: "Generate QR with contact/link",
    cost: 4,
    category: "interaction",
    subcategory: "Interactive",
    componentClass: "content",
    defaultData: {
      content: "https://example.com",
      size: 128,
      color: "#000000",
      backgroundColor: "#ffffff",
      logo: "",
    },
  },
  SliderComponent: {
    type: "SliderComponent",
    name: "Image Slider",
    description: "Carousel of images",
    cost: 6,
    category: "interaction",
    subcategory: "Media",
    componentClass: "content",
    defaultData: {
      images: [],
      autoplay: true,
      interval: 3000,
      showDots: true,
      showArrows: true,
    },
  },

  // Effect Components
  ColorPaletteComponent: {
    type: "ColorPaletteComponent",
    name: "Color Palette",
    description: "Apply color scheme to text and button components",
    cost: 3,
    category: "aesthetic",
    subcategory: "Colors",
    componentClass: "effect",
    targets: ["TextComponent", "ButtonComponent", "LinkComponent", "BadgeComponent"],
    defaultData: {
      palette: "default",
      primary: "#3b82f6",
      secondary: "#10b981",
      accent: "#f59e0b",
      background: "#ffffff",
      text: "#1f2937",
      targetComponents: ["TextComponent", "ButtonComponent"],
      applyToEntity: true,
    },
  },
  FontStyleComponent: {
    type: "FontStyleComponent",
    name: "Font Style",
    description: "Apply typography to text components",
    cost: 3,
    category: "aesthetic",
    subcategory: "Typography",
    componentClass: "effect",
    targets: ["TextComponent", "ButtonComponent", "LinkComponent"],
    defaultData: {
      fontFamily: "Inter, sans-serif",
      headingSize: "1.5rem",
      bodySize: "1rem",
      fontWeight: "normal",
      targetComponents: ["TextComponent"],
      applyToEntity: true,
    },
  },
  CustomFontComponent: {
    type: "CustomFontComponent",
    name: "Custom Font",
    description: "Apply custom fonts to text components",
    cost: 6,
    category: "aesthetic",
    subcategory: "Typography",
    componentClass: "effect",
    targets: ["TextComponent", "ButtonComponent", "LinkComponent"],
    defaultData: {
      fontUrl: "",
      fontName: "",
      fontWeight: "normal",
      fontStyle: "normal",
      targetComponents: ["TextComponent"],
      applyToEntity: true,
    },
  },
  ImageFilterComponent: {
    type: "ImageFilterComponent",
    name: "Image Filter",
    description: "Apply visual filters to image components",
    cost: 4,
    category: "aesthetic",
    subcategory: "Effects",
    componentClass: "effect",
    targets: ["ImageComponent"],
    defaultData: {
      filter: "none",
      intensity: 50,
      targetComponents: ["ImageComponent"],
      targetEntityIds: [],
    },
  },
  BorderComponent: {
    type: "BorderComponent",
    name: "Border",
    description: "Add custom borders to components",
    cost: 2,
    category: "aesthetic",
    subcategory: "Effects",
    componentClass: "effect",
    targets: ["ImageComponent", "ButtonComponent", "DividerComponent"],
    defaultData: {
      width: "1px",
      style: "solid",
      color: "#e5e7eb",
      radius: "0.5rem",
      sides: ["top", "right", "bottom", "left"],
      targetComponents: ["ImageComponent"],
      applyToEntity: false,
    },
    new: true,
  },
  ShadowComponent: {
    type: "ShadowComponent",
    name: "Shadow Effect",
    description: "Add customizable shadow effects to components",
    cost: 2,
    category: "aesthetic",
    subcategory: "Effects",
    componentClass: "effect",
    targets: ["ImageComponent", "ButtonComponent", "BadgeComponent"],
    defaultData: {
      type: "drop",
      x: "0px",
      y: "4px",
      blur: "6px",
      spread: "0px",
      color: "rgba(0, 0, 0, 0.1)",
      targetComponents: ["ImageComponent"],
      applyToEntity: false,
    },
    new: true,
  },
  GradientComponent: {
    type: "GradientComponent",
    name: "Gradient Background",
    description: "Add colorful gradient backgrounds to components",
    cost: 3,
    category: "aesthetic",
    subcategory: "Background",
    componentClass: "effect",
    targets: ["ButtonComponent", "BadgeComponent"],
    defaultData: {
      type: "linear",
      direction: "to right",
      colors: ["#4f46e5", "#10b981"],
      stops: [0, 100],
      targetComponents: ["ButtonComponent"],
      applyToEntity: false,
    },
    new: true,
  },
  PatternComponent: {
    type: "PatternComponent",
    name: "Background Pattern",
    description: "Add repeating pattern backgrounds",
    cost: 4,
    category: "aesthetic",
    subcategory: "Background",
    componentClass: "effect",
    targets: [],
    defaultData: {
      pattern: "dots",
      primaryColor: "#f3f4f6",
      secondaryColor: "#e5e7eb",
      opacity: 0.5,
      size: "20px",
      targetComponents: [],
      applyToEntity: true,
    },
    new: true,
  },
  TooltipComponent: {
    type: "TooltipComponent",
    name: "Tooltip",
    description: "Add hover tooltips to components",
    cost: 3,
    category: "interaction",
    subcategory: "Interactive",
    componentClass: "effect",
    targets: ["ButtonComponent", "ImageComponent", "IconComponent"],
    defaultData: {
      text: "Tooltip text",
      position: "top",
      style: "light",
      targetComponents: ["ButtonComponent"],
    },
  },

  // Global Components
  EmbedSocialComponent: {
    type: "EmbedSocialComponent",
    name: "Social Embed",
    description: "Embed content from Instagram, YouTube, Twitter",
    cost: 6,
    category: "interaction",
    subcategory: "Social",
    componentClass: "global",
    defaultData: {
      platform: "instagram",
      url: "",
      displayType: "post",
    },
  },
  AudioComponent: {
    type: "AudioComponent",
    name: "Audio Player",
    description: "Play short audio clips",
    cost: 8,
    category: "interaction",
    subcategory: "Media",
    componentClass: "content",
    defaultData: {
      url: "",
      autoplay: false,
      loop: false,
      controls: true,
    },
  },
  VideoComponent: {
    type: "VideoComponent",
    name: "Video Player",
    description: "Insert video miniature",
    cost: 10,
    category: "interaction",
    subcategory: "Media",
    componentClass: "content",
    defaultData: {
      url: "",
      autoplay: false,
      loop: false,
      controls: true,
      thumbnail: "",
    },
  },
  AccordionComponent: {
    type: "AccordionComponent",
    name: "Accordion",
    description: "Collapsible content sections",
    cost: 4,
    category: "interaction",
    subcategory: "Interactive",
    componentClass: "content",
    defaultData: {
      items: [
        { title: "Section 1", content: "Content for section 1" },
        { title: "Section 2", content: "Content for section 2" },
      ],
      allowMultiple: false,
      defaultOpen: [],
    },
    new: true,
  },
  TabsComponent: {
    type: "TabsComponent",
    name: "Tabs",
    description: "Tabbed content interface",
    cost: 5,
    category: "interaction",
    subcategory: "Interactive",
    componentClass: "content",
    defaultData: {
      tabs: [
        { title: "Tab 1", content: "Content for tab 1" },
        { title: "Tab 2", content: "Content for tab 2" },
      ],
      defaultTab: 0,
      orientation: "horizontal",
    },
    new: true,
  },
  SocialLinksComponent: {
    type: "SocialLinksComponent",
    name: "Social Links",
    description: "Display social media profile links",
    cost: 3,
    category: "interaction",
    subcategory: "Social",
    componentClass: "content",
    defaultData: {
      links: [
        { platform: "twitter", url: "", username: "" },
        { platform: "instagram", url: "", username: "" },
        { platform: "linkedin", url: "", username: "" },
      ],
      displayStyle: "icon",
      size: "medium",
      color: "",
    },
    new: true,
  },
  ContactFormComponent: {
    type: "ContactFormComponent",
    name: "Contact Form",
    description: "Simple contact form with email functionality",
    cost: 8,
    category: "interaction",
    subcategory: "Forms",
    componentClass: "content",
    defaultData: {
      fields: [
        { type: "text", name: "name", label: "Name", required: true },
        { type: "email", name: "email", label: "Email", required: true },
        { type: "textarea", name: "message", label: "Message", required: true },
      ],
      submitButtonText: "Send Message",
      successMessage: "Message sent successfully!",
      errorMessage: "There was an error sending your message.",
    },
    new: true,
  },

  // Portfolio Components
  CertificationPreviewComponent: {
    type: "CertificationPreviewComponent",
    name: "Certification",
    description: "Show certificate with preview + link",
    cost: 7,
    category: "portfolio",
    subcategory: "Credentials",
    componentClass: "content",
    defaultData: {
      title: "Certificate Title",
      issuer: "Issuing Organization",
      date: new Date().toISOString().split("T")[0],
      imageUrl: "",
      certificateUrl: "",
    },
  },
  GalleryComponent: {
    type: "GalleryComponent",
    name: "Gallery",
    description: "Mini gallery of works",
    cost: 8,
    category: "portfolio",
    subcategory: "Showcase",
    componentClass: "content",
    defaultData: {
      images: [],
      layout: "grid",
    },
  },
  TimelineCVComponent: {
    type: "TimelineCVComponent",
    name: "Timeline CV",
    description: "Timeline with experience",
    cost: 7,
    category: "portfolio",
    subcategory: "Experience",
    componentClass: "content",
    defaultData: {
      entries: [],
    },
  },
  TestimonialComponent: {
    type: "TestimonialComponent",
    name: "Testimonial",
    description: "Testimonial with text + photo",
    cost: 4,
    category: "portfolio",
    subcategory: "Feedback",
    componentClass: "content",
    defaultData: {
      quote: "This is a testimonial quote.",
      author: "John Doe",
      position: "CEO",
      company: "Company Name",
      avatarUrl: "",
      rating: 5,
    },
  },
  SkillsComponent: {
    type: "SkillsComponent",
    name: "Skills Display",
    description: "Showcase skills with optional ratings",
    cost: 3,
    category: "portfolio",
    subcategory: "Skills",
    componentClass: "content",
    defaultData: {
      skills: [
        { name: "Web Development", rating: 90 },
        { name: "UI/UX Design", rating: 85 },
        { name: "Project Management", rating: 75 },
      ],
      displayStyle: "bars",
      showRatings: true,
    },
    new: true,
  },
  ProjectCardComponent: {
    type: "ProjectCardComponent",
    name: "Project Card",
    description: "Showcase a project with image and details",
    cost: 5,
    category: "portfolio",
    subcategory: "Showcase",
    componentClass: "content",
    defaultData: {
      title: "Project Title",
      description: "Short project description goes here.",
      imageUrl: "",
      projectUrl: "",
      technologies: ["React", "Node.js", "MongoDB"],
      completed: "2023",
    },
    new: true,
  },
  EducationComponent: {
    type: "EducationComponent",
    name: "Education",
    description: "Display educational background",
    cost: 4,
    category: "portfolio",
    subcategory: "Credentials",
    componentClass: "content",
    defaultData: {
      institutions: [
        {
          name: "University Name",
          degree: "Bachelor of Science",
          field: "Computer Science",
          startYear: "2018",
          endYear: "2022",
          logo: "",
        },
      ],
      displayStyle: "cards",
    },
    new: true,
  },
  AwardsComponent: {
    type: "AwardsComponent",
    name: "Awards & Honors",
    description: "Showcase awards and recognitions",
    cost: 4,
    category: "portfolio",
    subcategory: "Credentials",
    componentClass: "content",
    defaultData: {
      awards: [
        {
          title: "Award Title",
          issuer: "Awarding Organization",
          date: "2023",
          description: "Brief description of the award",
          imageUrl: "",
        },
      ],
      displayStyle: "list",
    },
    new: true,
  },

  // Professional Components
  AnalyticsComponent: {
    type: "AnalyticsComponent",
    name: "Analytics",
    description: "Track visits, clicks, conversion",
    cost: 6,
    category: "professional",
    subcategory: "Tracking",
    componentClass: "global",
    defaultData: {
      trackPageViews: true,
      trackClicks: true,
      trackConversions: false,
      goals: [],
    },
  },
  SEOMetadataComponent: {
    type: "SEOMetadataComponent",
    name: "SEO Metadata",
    description: "Customize title, description, OG tags",
    cost: 5,
    category: "professional",
    subcategory: "Optimization",
    componentClass: "global",
    defaultData: {
      title: "",
      description: "",
      keywords: [],
      ogImage: "",
      twitterCard: "summary",
    },
  },
  ExportCardComponent: {
    type: "ExportCardComponent",
    name: "Export Card",
    description: "Export card to PDF or image",
    cost: 6,
    category: "professional",
    subcategory: "Export",
    componentClass: "global",
    defaultData: {
      format: "pdf",
      quality: "medium",
      includeBackground: true,
    },
  },
  CalendarComponent: {
    type: "CalendarComponent",
    name: "Booking Calendar",
    description: "Allow visitors to book appointments",
    cost: 10,
    category: "professional",
    subcategory: "Business",
    componentClass: "content",
    defaultData: {
      availableDays: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"],
      timeSlots: ["9:00", "10:00", "11:00", "13:00", "14:00", "15:00", "16:00"],
      duration: 60,
      timezone: "UTC",
      confirmationEmail: true,
    },
    new: true,
  },
  PricingTableComponent: {
    type: "PricingTableComponent",
    name: "Pricing Table",
    description: "Display service or product pricing options",
    cost: 7,
    category: "professional",
    subcategory: "Business",
    componentClass: "content",
    defaultData: {
      plans: [
        {
          name: "Basic",
          price: "$9.99",
          period: "monthly",
          features: ["Feature 1", "Feature 2"],
          cta: "Get Started",
          ctaUrl: "",
          highlighted: false,
        },
        {
          name: "Pro",
          price: "$19.99",
          period: "monthly",
          features: ["Feature 1", "Feature 2", "Feature 3", "Feature 4"],
          cta: "Get Started",
          ctaUrl: "",
          highlighted: true,
        },
      ],
      layout: "horizontal",
    },
    new: true,
  },
  NewsletterComponent: {
    type: "NewsletterComponent",
    name: "Newsletter Signup",
    description: "Collect email subscribers",
    cost: 5,
    category: "professional",
    subcategory: "Marketing",
    componentClass: "content",
    defaultData: {
      title: "Subscribe to our newsletter",
      description: "Get the latest updates directly to your inbox.",
      buttonText: "Subscribe",
      placeholder: "Enter your email",
      successMessage: "Thanks for subscribing!",
      service: "mailchimp",
    },
    new: true,
  },
  StatisticsComponent: {
    type: "StatisticsComponent",
    name: "Statistics Display",
    description: "Showcase key metrics or statistics",
    cost: 4,
    category: "professional",
    subcategory: "Business",
    componentClass: "content",
    defaultData: {
      stats: [
        { label: "Clients", value: "100+", icon: "users" },
        { label: "Projects", value: "500+", icon: "briefcase" },
        { label: "Years", value: "10+", icon: "calendar" },
      ],
      layout: "grid",
      animation: true,
    },
    new: true,
  },
}

// Get component cost
export const getComponentCost = (type: ComponentType): number => {
  return componentRegistry[type]?.cost || 0
}

// Get entity base cost
export const getEntityBaseCost = (): number => {
  return 2 // Base cost for an entity
}

// Calculate total cost for an entity
export const calculateEntityCost = (componentTypes: ComponentType[]): number => {
  const baseCost = getEntityBaseCost()
  const componentsCost = componentTypes.reduce((total, type) => {
    return total + getComponentCost(type)
  }, 0)

  return baseCost + componentsCost
}

// Get components by category
export const getComponentsByCategory = (
  category: "basic" | "aesthetic" | "interaction" | "portfolio" | "professional",
): ComponentDefinition[] => {
  return Object.values(componentRegistry).filter((comp) => comp.category === category)
}

// Get components by class
export const getComponentsByClass = (componentClass: "content" | "effect" | "global"): ComponentDefinition[] => {
  return Object.values(componentRegistry).filter((comp) => comp.componentClass === componentClass)
}

// Get effect components that can target a specific component type
export const getEffectComponentsForTarget = (targetType: ComponentType): ComponentDefinition[] => {
  return Object.values(componentRegistry).filter(
    (comp) => comp.componentClass === "effect" && comp.targets?.includes(targetType),
  )
}

// Get all component categories
export const getComponentCategories = (): ("basic" | "aesthetic" | "interaction" | "portfolio" | "professional")[] => {
  return ["basic", "aesthetic", "interaction", "portfolio", "professional"]
}
